# -*- coding: utf-8 -*-
"""inventario_lci.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1QiKOPlH4q6wZapyU92dXXQGtZ8Do7YOY
"""

import xml.etree.ElementTree as ET
import pandas as pd

class InventarioLCI:

 def __init__(self):
  self.dados_brutos = None
  self.matriz_de_dados = None
  self.identificador = None
  self.nome = None

 def carregar_arquivo(self, caminho):
  """Carrega um arquivo XML de inventário LCI."""
  try:
   tree = ET.parse(caminho)
   root = tree.getroot()
   self.identificador = caminho
   self.nome = caminho.split('/content/base de dados.xml')[-1]

   # Definir namespace do ILCD
   ns = {'ilcd': 'http://lca.jrc.it/ILCD/Process', 'common': 'http://lca.jrc.it/ILCD/Common'}

   # Extrair informações dos exchanges
   dados = []
   for exchange in root.findall('.//ilcd:exchange', ns):
    nome_elem = exchange.find('.//common:shortDescription', ns)
    quantidade_elem = exchange.find('.//ilcd:meanAmount', ns)

    if nome_elem is not None and quantidade_elem is not None:
     dados.append({
       "Nome": nome_elem.text.strip(),
       "Quantidade Média (meanAmount)": float(quantidade_elem.text)})

   self.dados_brutos = dados
   return True
  except Exception as e:
   print(f"Erro ao carregar arquivo: {e}")
   return False

 def processar_dados_internos(self):
  """Processa os dados brutos do inventário."""
  if self.dados_brutos:
   self.matriz_de_dados = pd.DataFrame(self.dados_brutos)
   return True
  return False

 def obter_matriz_processada(self):
  """Retorna a matriz de dados processada."""
  return self.matriz_de_dados

inventario = InventarioLCI()
sucesso = inventario.carregar_arquivo("/content/base de dados.xml")
print("Arquivo carregado:", sucesso)

if sucesso:
    inventario.processar_dados_internos()
    print("Matriz de dados:", inventario.obter_matriz_processada())
else:
    print("Falha ao carregar o arquivo.")