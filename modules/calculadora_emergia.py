# -*- coding: utf-8 -*-
"""calculadora_emergia.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/14fRa5MCphMJ0NrV9OLysyvuKBsjTXOxA
"""

import pandas as pd

class CalculadoraEmergia:
    def __init__(self):
        self.configuracao_calculo = {
            # Definir fatores de caracterização
            "fatores_caracterizacao": {
                "Cadmium": {"Ecotoxicidade": 820, "Toxicidade Humana": 1.2E-3, "Acidificação": 0.0005},
                "Copper e ion juntos": {"Ecotoxicidade": 50, "Eutrofização": 0.002},
                "Chromium": {"Ecotoxicidade": 120, "Toxicidade Humana": 0.0008},
                "Zinc e ion juntos": {"Ecotoxicidade": 60, "Acidificação": 0.0003},
                "Pesticide, unspecified": {"Ecotoxicidade": "Variável"},
                "Phosphorus": {"Eutrofização": 0.42},
                "Rape seed for sowing": {"Impacto agrícola": "Dependente do método de cultivo"},
                "Gypsum e mineral juntos": {"Acidificação": 0.0001},
                "Inorganic potassium fertiliser as K₂O": {"Eutrofização": 0.42, "Acidificação": 0.0003},
                "Water, unspecified natural origin": {"Escassez Hídrica": "Dependente da região"},
                "Lead": {"Ecotoxicidade": 500, "Toxicidade Humana": 0.002},
                "Application of plant protection product by field sprayer": {"Impacto ambiental": "Depende do produto aplicado"},
                "Dinitrogen monoxide": {"Aquecimento Global": 298},
                "Occupation e annual crop, non-irrigated e intensive": {"Impacto agrícola": "Dependente do manejo"},
                "Transformation, to annual crop, non-irrigated": {"Impacto na conversão de uso do solo": "Variável"},
                "Planting with starter fertiliser, by no till planter": {"Impacto agrícola": "Depende do fertilizante"},
                "Inorganic phosphorus fertiliser, as P₂O₅": {"Eutrofização": 0.42},
                "Glyphosate": {"Ecotoxicidade": "Variável"},
                "Cadmium, ion juntos": {"Ecotoxicidade": 820},
                "Carbon dioxide, in air": {"Aquecimento Global": 1},
                "Transformation, from annual crop, non-irrigated": {"Impacto na conversão de uso do solo": "Variável"},
                "Canola grain": {"Impacto agrícola": "Dependente do cultivo"},
                "Lime": {"Impacto na correção do solo": "Variável"},
                "Nitrate": {"Eutrofização": 0.42},
                "Nickel": {"Ecotoxicidade": 60, "Toxicidade Humana": 0.0008},
                "Ammonia": {"Acidificação": 0.0005},
                "Nitrogen oxides": {"Acidificação": 0.001},
                "Packaging, for pesticides": {"Impacto ambiental": "Depende do descarte"},
                "Clethodim": {"Ecotoxicidade": "Variável"},
                "Packaging, for fertilisers": {"Impacto ambiental": "Depende do descarte"},
                "Fipronil": {"Ecotoxicidade": "Altamente tóxico"},
                "Combine harvesting": {"Impacto agrícola": "Depende da eficiência"},
                "Diflubenzuron": {"Ecotoxicidade": "Variável"},
                "Nickel, ion juntos": {"Ecotoxicidade": 60},
                "Carbon dioxide, fossil": {"Aquecimento Global": 1},
                "Lambda-cyhalothrin": {"Ecotoxicidade": "Variável"},
                "Limestone and gypsum application, by spreader": {"Acidificação": 0.0001},
                "Energy, gross calorific value, in biomass": {"Potencial Energético": "Variável"}
            },
            # Definir fatores de transformidade
            "fatores_transformidade": {
                 "Copper, ion": 2.5E12,  # Baseado em estudos sobre metais pesados
                 "Zinc, ion": 3.0E12,
                 "Phosphorus": 9.0E12,
                 "Gypsum, mineral": 1.5E12,
                 "Inorganic potassium fertiliser, as K₂O": 8.0E12,
                 "Urea": 5.5E12,
                 "Water, unspecified natural origin": 1.0E6,
                 "Lead": 4.0E12,
                 "Chromium, ion": 1.8E12,
                 "Dinitrogen monoxide": 2.8E6,
                 "Inorganic phosphorus fertiliser, as P₂O₅": 9.5E12,
                 "Cadmium, ion": 1.2E13,
                 "Carbon dioxide, in air": 1.0E6,
                 "Carbon dioxide, fossil": 1.2E6,
                 "Nickel, ion": 2.0E12,
                 "Nitrogen oxides": 3.5E6,
                 "Energy, gross calorific value, in biomass": 4.5E6,

                 # Valores médios para substâncias sem referência direta
                 "Pesticide, unspecified": 5.0E12,  # Média de pesticidas conhecidos
                 "Rape seed, for sowing": 3.0E12,  # Baseado em sementes agrícolas
                 "Application of plant protection product, by field sprayer": 6.0E12,  # Média de produtos aplicados
                 "Fertilising, by broadcaster": 7.0E12,  # Baseado em fertilizantes agrícolas
                 "Occupation, annual crop, non-irrigated, intensive": 4.5E12,  # Média de ocupação agrícola
                 "Transformation, to annual crop, non-irrigated": 4.0E12,  # Conversão de uso do solo
                 "Planting with starter fertiliser, by no till planter": 5.5E12,  # Baseado em práticas agrícolas
                 "Glyphosate": 6.5E12,  # Média de herbicidas conhecidos
                 "Transformation, from annual crop, non-irrigated": 4.0E12,  # Conversão de uso do solo
                 "Canola grain": 3.5E12,  # Baseado em grãos agrícolas
                 "Lime": 2.5E12,  # Baseado em corretivos de solo
                 "Packaging, for pesticides": 4.0E12,  # Média de embalagens químicas
                 "Clethodim": 5.5E12,  # Média de herbicidas
                 "Packaging, for fertilisers": 4.5E12,  # Média de embalagens agrícolas
                 "Fipronil": 7.0E12,  # Baseado em pesticidas altamente tóxicos
                 "Combine harvesting": 6.0E12,  # Baseado em processos agrícolas
                 "Water": 1.0E6,  # Média de recursos hídricos
                 "Diflubenzuron": 5.0E12,  # Média de pesticidas
                 "Lambda-cyhalothrin": 6.0E12,  # Média de inseticidas
                 "Limestone and gypsum application, by spreader": 2.0E12  # Baseado em corretivos de solo
            }
        }

    def calcular_emergia_total(self, matriz_dados):
        """Calcula a emergia total com base na matriz de dados fornecida."""
        try:
            # Criar uma cópia do DataFrame para não modificar o original
            df = matriz_dados.copy()

            # Aplicar fatores de caracterização
            for impacto, valores in self.configuracao_calculo["fatores_caracterizacao"].items():
                if impacto in df["Nome"].values:
                    for categoria, fator in valores.items():
                        if isinstance(fator, (int, float)):
                            df.loc[df["Nome"] == impacto, categoria] = df["Quantidade Média (meanAmount)"] * fator
                        else:
                            df.loc[df["Nome"] == impacto, categoria] = "Definir valor"

            # Substituir NaN por 0 para evitar erro nos cálculos
            df.fillna(0, inplace=True)

            # Verificar colunas disponíveis e selecionar apenas numéricas
            df_numerico = df.select_dtypes(include=["number"])

            # Calcular impacto ambiental total por categoria
            impacto_total = df_numerico.sum()

            # Aplicar fatores de transformidade
            for coluna in impacto_total.index:
                if coluna in self.configuracao_calculo["fatores_transformidade"]:
                    impacto_total[coluna] *= self.configuracao_calculo["fatores_transformidade"][coluna]

            # Calcular emergia total
            emergia_total = impacto_total.sum()

            # Criar objeto ResultadoEmergia
            from modules.resultado_emergia import ResultadoEmergia
            resultado = ResultadoEmergia()
            resultado.valor_total = emergia_total
            resultado.sumario_descritivo = f"Emergia Total: {emergia_total:.5E} sej (Solar Emjoules)"

            return resultado
        except Exception as e:
            print(f"Erro ao calcular emergia: {e}")
            return None